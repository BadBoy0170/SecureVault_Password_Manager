{"version":3,"file":"index-DwAin_ia.js","sources":["../../src/utils/crypto.ts","../../src/hooks/useVault.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["const ITERATIONS = 100000;\nconst KEY_LENGTH = 256;\nconst SALT_LENGTH = 16;\nconst IV_LENGTH = 12;\n\n// Helper functions for base64\nfunction arrayBufferToBase64(buffer: ArrayBuffer): string {\n  const bytes = new Uint8Array(buffer);\n  let binary = '';\n  for (let i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n\nfunction base64ToArrayBuffer(base64: string): ArrayBuffer {\n  const binary = atob(base64);\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nexport async function generateSalt(): Promise<string> {\n  try {\n    const salt = crypto.getRandomValues(new Uint8Array(SALT_LENGTH));\n    return arrayBufferToBase64(salt);\n  } catch (error) {\n    console.error('Failed to generate salt:', error);\n    throw new Error('Cryptographic salt generation failed');\n  }\n}\n\nexport async function deriveKey(password: string, salt: string): Promise<CryptoKey> {\n  if (!password || !salt) {\n    throw new Error('Password and salt are required');\n  }\n\n  try {\n    const encoder = new TextEncoder();\n    const passwordBuffer = encoder.encode(password);\n    const saltBuffer = base64ToArrayBuffer(salt);\n    \n    const importedKey = await crypto.subtle.importKey(\n      'raw',\n      passwordBuffer,\n      'PBKDF2',\n      false,\n      ['deriveBits', 'deriveKey']\n    );\n\n    return crypto.subtle.deriveKey(\n      {\n        name: 'PBKDF2',\n        salt: saltBuffer,\n        iterations: ITERATIONS,\n        hash: 'SHA-256'\n      },\n      importedKey,\n      { name: 'AES-GCM', length: KEY_LENGTH },\n      false,\n      ['encrypt', 'decrypt']\n    );\n  } catch (error) {\n    console.error('Key derivation failed:', error);\n    throw new Error('Failed to derive cryptographic key');\n  }\n}\n\nexport async function encrypt(data: string, key: CryptoKey): Promise<{ encryptedData: string; iv: string }> {\n  if (!data) {\n    throw new Error('Data to encrypt cannot be empty');\n  }\n\n  try {\n    const encoder = new TextEncoder();\n    const iv = crypto.getRandomValues(new Uint8Array(IV_LENGTH));\n    \n    const encryptedBuffer = await crypto.subtle.encrypt(\n      { name: 'AES-GCM', iv },\n      key,\n      encoder.encode(data)\n    );\n\n    return {\n      encryptedData: arrayBufferToBase64(encryptedBuffer),\n      iv: arrayBufferToBase64(iv)\n    };\n  } catch (error) {\n    console.error('Encryption failed:', error);\n    throw new Error('Failed to encrypt data');\n  }\n}\n\nexport async function decrypt(encryptedData: string, iv: string, key: CryptoKey): Promise<string> {\n  if (!encryptedData || !iv) {\n    throw new Error('Encrypted data and IV are required');\n  }\n\n  try {\n    const decoder = new TextDecoder();\n    const encryptedBuffer = base64ToArrayBuffer(encryptedData);\n    const ivBuffer = base64ToArrayBuffer(iv);\n\n    const decryptedBuffer = await crypto.subtle.decrypt(\n      { name: 'AES-GCM', iv: ivBuffer },\n      key,\n      encryptedBuffer\n    );\n\n    return decoder.decode(decryptedBuffer);\n  } catch (error) {\n    console.error('Decryption failed:', error);\n    throw new Error('Failed to decrypt data');\n  }\n}\n\nexport function generatePassword(\n  length: number = 16,\n  options = { uppercase: true, lowercase: true, numbers: true, symbols: true }\n): string {\n  if (length < 8) {\n    throw new Error('Password length must be at least 8 characters');\n  }\n\n  const uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const lowercase = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '0123456789';\n  const symbols = '!@#$%^&*()_+-=[]{}|;:,.<>?';\n\n  let chars = '';\n  if (options.uppercase) chars += uppercase;\n  if (options.lowercase) chars += lowercase;\n  if (options.numbers) chars += numbers;\n  if (options.symbols) chars += symbols;\n\n  if (chars.length === 0) {\n    throw new Error('At least one character set must be selected');\n  }\n\n  return Array.from(crypto.getRandomValues(new Uint8Array(length)))\n    .map((byte) => chars[byte % chars.length])\n    .join('');\n}","import { useState, useCallback, useEffect } from 'react';\nimport { deriveKey, encrypt, decrypt, generateSalt } from '../utils/crypto';\nimport type { Credential, EncryptedCredential, MasterKey } from '../types';\n\nconst STORAGE_KEY = 'secure_vault_data';\nconst MASTER_KEY = 'master_key';\n\nexport function useVault() {\n  const [isUnlocked, setIsUnlocked] = useState(false);\n  const [masterKey, setMasterKey] = useState<CryptoKey | null>(null);\n  const [credentials, setCredentials] = useState<Credential[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const setupMasterPassword = useCallback(async (password: string) => {\n    if (password.length < 8) {\n      setError('Master password must be at least 8 characters long');\n      return false;\n    }\n\n    try {\n      const salt = await generateSalt();\n      const key = await deriveKey(password, salt);\n      const verifier = await encrypt('verified', key);\n      \n      const masterKeyData: MasterKey = {\n        salt,\n        verifier: JSON.stringify(verifier)\n      };\n      \n      localStorage.setItem(MASTER_KEY, JSON.stringify(masterKeyData));\n      setMasterKey(key);\n      setIsUnlocked(true);\n      setError(null);\n      return true;\n    } catch (err) {\n      setError('Failed to set up master password');\n      return false;\n    }\n  }, []);\n\n  const unlock = useCallback(async (password: string) => {\n    const masterKeyData = localStorage.getItem(MASTER_KEY);\n    if (!masterKeyData) return false;\n\n    try {\n      const { salt, verifier } = JSON.parse(masterKeyData) as MasterKey;\n      const key = await deriveKey(password, salt);\n      \n      const { encryptedData, iv } = JSON.parse(verifier);\n      await decrypt(encryptedData, iv, key);\n      setMasterKey(key);\n      setIsUnlocked(true);\n      setError(null);\n      return true;\n    } catch {\n      setError('Invalid master password');\n      return false;\n    }\n  }, []);\n\n  const addCredential = useCallback(async (credential: Omit<Credential, 'id' | 'createdAt' | 'updatedAt'>) => {\n    if (!masterKey) {\n      setError('Vault is locked');\n      throw new Error('Vault is locked');\n    }\n\n    // Validate input\n    if (!credential.title || !credential.username || !credential.password) {\n      setError('Title, username, and password are required');\n      throw new Error('Incomplete credential');\n    }\n\n    try {\n      const newCredential: Credential = {\n        ...credential,\n        id: crypto.randomUUID(),\n        createdAt: Date.now(),\n        updatedAt: Date.now()\n      };\n\n      const { encryptedData, iv } = await encrypt(JSON.stringify(newCredential), masterKey);\n      \n      const encryptedCredential: EncryptedCredential = {\n        id: newCredential.id,\n        encryptedData,\n        iv,\n        createdAt: newCredential.createdAt,\n        updatedAt: newCredential.updatedAt\n      };\n\n      const stored = localStorage.getItem(STORAGE_KEY);\n      const storedCredentials = stored ? JSON.parse(stored) : [];\n      localStorage.setItem(STORAGE_KEY, JSON.stringify([...storedCredentials, encryptedCredential]));\n\n      setCredentials(prev => [...prev, newCredential]);\n      setError(null);\n      return newCredential;\n    } catch (err) {\n      setError('Failed to add credential');\n      throw err;\n    }\n  }, [masterKey]);\n\n  const loadCredentials = useCallback(async () => {\n    if (!masterKey) return;\n\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (!stored) {\n        setCredentials([]);\n        return;\n      }\n\n      const encryptedCredentials = JSON.parse(stored) as EncryptedCredential[];\n      const decryptedCredentials = await Promise.all(\n        encryptedCredentials.map(async ({ encryptedData, iv, ...rest }) => {\n          const decrypted = await decrypt(encryptedData, iv, masterKey);\n          return JSON.parse(decrypted) as Credential;\n        })\n      );\n\n      setCredentials(decryptedCredentials);\n      setError(null);\n    } catch (err) {\n      setError('Failed to load credentials');\n      setCredentials([]);\n    }\n  }, [masterKey]);\n\n  useEffect(() => {\n    if (masterKey) {\n      loadCredentials().finally(() => setIsLoading(false));\n    } else {\n      setIsLoading(false);\n    }\n  }, [masterKey, loadCredentials]);\n\n  return {\n    isUnlocked,\n    isLoading,\n    credentials,\n    setupMasterPassword,\n    unlock,\n    addCredential,\n    error\n  };\n}","import React, { useState } from 'react';\nimport { Shield, Key, Plus, Lock, Unlock, RefreshCw, AlertTriangle } from 'lucide-react';\nimport { useVault } from './hooks/useVault';\nimport { generatePassword } from './utils/crypto';\n\nfunction App() {\n  const { \n    isUnlocked, \n    isLoading, \n    credentials, \n    setupMasterPassword, \n    unlock, \n    addCredential,\n    error \n  } = useVault();\n  const [masterPassword, setMasterPassword] = useState('');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newCredential, setNewCredential] = useState({\n    title: '',\n    username: '',\n    password: '',\n    url: '',\n    notes: ''\n  });\n\n  const handleUnlock = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    const stored = localStorage.getItem('master_key');\n    if (!stored) {\n      await setupMasterPassword(masterPassword);\n    } else {\n      await unlock(masterPassword);\n    }\n    setMasterPassword('');\n  };\n\n  const handleAddCredential = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    try {\n      await addCredential(newCredential);\n      setShowAddForm(false);\n      setNewCredential({\n        title: '',\n        username: '',\n        password: '',\n        url: '',\n        notes: ''\n      });\n    } catch (err) {\n      // Error is already handled in useVault hook\n    }\n  };\n\n  const generateNewPassword = () => {\n    setNewCredential(prev => ({\n      ...prev,\n      password: generatePassword()\n    }));\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"animate-spin\">\n          <RefreshCw className=\"w-8 h-8 text-blue-500\" />\n        </div>\n      </div>\n    );\n  }\n\n  if (!isUnlocked) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"w-full max-w-md p-8 space-y-6 bg-white shadow-md rounded-xl\">\n          <div className=\"text-center\">\n            <Shield className=\"mx-auto h-12 w-12 text-blue-500\" />\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n              SecureVault\n            </h2>\n          </div>\n          \n          {error && (\n            <div className=\"bg-red-50 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n              <AlertTriangle className=\"inline-block mr-2 h-5 w-5\" />\n              {error}\n            </div>\n          )}\n          \n          <form onSubmit={handleUnlock} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"masterPassword\" className=\"sr-only\">Master Password</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                required\n                value={masterPassword}\n                onChange={(e) => setMasterPassword(e.target.value)}\n                className=\"appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Enter Master Password\"\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              <Lock className=\"h-5 w-5 mr-2\" /> Unlock Vault\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <header className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">\n            <Shield className=\"inline-block mr-3 h-8 w-8 text-blue-500\" />\n            SecureVault\n          </h1>\n          <button \n            onClick={() => setShowAddForm(true)}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 flex items-center\"\n          >\n            <Plus className=\"h-5 w-5 mr-2\" /> Add Credential\n          </button>\n        </header>\n\n        {error && (\n          <div className=\"bg-red-50 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n            <AlertTriangle className=\"inline-block mr-2 h-5 w-5\" />\n            {error}\n          </div>\n        )}\n\n        {showAddForm && (\n          <div className=\"bg-white shadow-md rounded-lg p-6 mb-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">Add New Credential</h2>\n            <form onSubmit={handleAddCredential} className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={newCredential.title}\n                  onChange={(e) => setNewCredential(prev => ({ ...prev, title: e.target.value }))}\n                  required\n                  className=\"border rounded-md px-3 py-2\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  value={newCredential.username}\n                  onChange={(e) => setNewCredential(prev => ({ ...prev, username: e.target.value }))}\n                  required\n                  className=\"border rounded-md px-3 py-2\"\n                />\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"relative\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Password\"\n                    value={newCredential.password}\n                    onChange={(e) => setNewCredential(prev => ({ ...prev, password: e.target.value }))}\n                    required\n                    className=\"border rounded-md px-3 py-2 w-full\"\n                  />\n                  <button \n                    type=\"button\"\n                    onClick={generateNewPassword}\n                    className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700\"\n                  >\n                    <RefreshCw className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <input\n                  type=\"url\"\n                  placeholder=\"URL (optional)\"\n                  value={newCredential.url}\n                  onChange={(e) => setNewCredential(prev => ({ ...prev, url: e.target.value }))}\n                  className=\"border rounded-md px-3 py-2\"\n                />\n              </div>\n              <textarea\n                placeholder=\"Notes (optional)\"\n                value={newCredential.notes}\n                onChange={(e) => setNewCredential(prev => ({ ...prev, notes: e.target.value }))}\n                className=\"border rounded-md px-3 py-2 w-full\"\n                rows={3}\n              />\n              <div className=\"flex justify-end space-x-4\">\n                <button \n                  type=\"button\"\n                  onClick={() => setShowAddForm(false)}\n                  className=\"text-gray-600 hover:text-gray-900\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n                >\n                  Save Credential\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n\n        <div className=\"grid gap-4\">\n          {credentials.length === 0 ? (\n            <div className=\"text-center text-gray-500 py-8\">\n              <p>No credentials saved yet. Add your first credential!</p>\n            </div>\n          ) : (\n            credentials.map(credential => (\n              <div \n                key={credential.id} \n                className=\"bg-white shadow-md rounded-lg p-4 flex justify-between items-center\"\n              >\n                <div>\n                  <h3 className=\"font-semibold\">{credential.title}</h3>\n                  <p className=\"text-gray-600\">{credential.username}</p>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <button \n                    className=\"text-blue-500 hover:text-blue-700\"\n                    title=\"View Details\"\n                  >\n                    <Key className=\"h-5 w-5\" />\n                  </button>\n                  <button \n                    className=\"text-red-500 hover:text-red-700\"\n                    title=\"Delete\"\n                  >\n                    <Unlock className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"names":["arrayBufferToBase64","buffer","bytes","Uint8Array","binary","i","byteLength","String","fromCharCode","btoa","base64ToArrayBuffer","base64","atob","length","charCodeAt","async","deriveKey","password","salt","Error","passwordBuffer","TextEncoder","encode","saltBuffer","importedKey","crypto","subtle","importKey","name","iterations","hash","error","encrypt","data","key","encoder","iv","getRandomValues","encryptedData","decrypt","decoder","TextDecoder","encryptedBuffer","ivBuffer","decryptedBuffer","decode","generatePassword","options","uppercase","lowercase","numbers","symbols","chars","Array","from","map","byte","join","STORAGE_KEY","MASTER_KEY","useVault","isUnlocked","setIsUnlocked","useState","masterKey","setMasterKey","credentials","setCredentials","isLoading","setIsLoading","setError","setupMasterPassword","useCallback","generateSalt","verifier","masterKeyData","JSON","stringify","localStorage","setItem","err","unlock","getItem","parse","addCredential","credential","title","username","newCredential","id","randomUUID","createdAt","Date","now","updatedAt","encryptedCredential","stored","storedCredentials","prev","loadCredentials","encryptedCredentials","decryptedCredentials","Promise","all","rest","decrypted","useEffect","finally","App","masterPassword","setMasterPassword","showAddForm","setShowAddForm","setNewCredential","url","notes","handleUnlock","e","preventDefault","jsx","className","children","RefreshCw","jsxs","Shield","jsxRuntimeExports","onClick","Plus","role","AlertTriangle","onSubmit","type","placeholder","value","onChange","target","required","rows","Key","Unlock","htmlFor","Lock","createRoot","document","getElementById","render","StrictMode"],"mappings":"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"}